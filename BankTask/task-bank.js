// Cоздать функцию которая принимает число и возвращает  текст как в примере:
//     3275  —>  "3000 + 200 + 70 +5"

// ____________________________________________________________
//
// Дан массив целых чисел, найдите тот, который встречается нечетное количество раз.
// Всегда будет только одно целое число, которое встречается нечетное количество раз
//     [1,2,3,4,5,2,4,1,3] -> 5
// function findOdd(array) {
//     let count = 0;
//     let last;
//     console.log(last);
//
//     array.sort();
//     console.log(array);
//
//     for (let i = 0; i < array.length; i++) {
//         if (array[i] === last) {
//             count++;
//             continue;
//         }
//         if (count % 2) return last;
//         last = array[i];
//         count = 1;
//     }
//     return last;
// }
//
// console.log(findOdd([1,2,3,4,5,2,4,1,3]));
// _____________________________________________________________
//
// Знайти анаграму.
//     Перевірити чи слово має в собі такі самі літери як і поеперднє слово.
//
//     ANAGRAM | MGANRAA -> true
// EXIT | AXET -> false
// GOOD | DOGO -> true


// _______________________________________________________________
//
// Точная степень двойки
// Дано натуральное число N.
//     Выведите слово YES, если число N является точной степенью двойки, или слово NO в противном случае.
//     Операцией возведения в степень пользоваться нельзя!
const N = 10;

function findNumber(number) {

}

findNumber(N);
//     ______________________________________________________________
//
// Сумма цифр числа
// Дано натуральное число N. Вычислите сумму его цифр.
//     При решении этой задачи нельзя использовать строки,
//     списки, массивы ну и циклы, разумеется.
//     Рекурсія)
//
// ______________________________________________________________
//
// Палиндром
// Дано слово, состоящее только из строчных латинских букв. Проверьте, является ли это слово палиндромом. Выведите YES или NO.
//     При решении этой задачи нельзя пользоваться циклами, в решениях на питоне нельзя использовать срезы с шагом, отличным от 1.
//
// function checkIsWordPolindrom(word) {
//
//     return word.toLowerCase() === word.toLowerCase().split('').reverse().join('');
//
// }
//
// console.log(checkIsWordPolindrom('rotator'));
// console.log(checkIsWordPolindrom('home'));
// console.log(checkIsWordPolindrom('racecar'));
// _______________________________________________________________

// Количество единиц
// Дана последовательность натуральных чисел  в строке, завершающаяся двумя числами 0 подряд.
// Определите, сколько раз в этой последовательности встречается число 1. Числа, идущие после двух нулей, необходимо игнорировать.
//
// 2176491947586100 -> 3
// function findNumber(string) {
//     let num = 0;
//     for (let i = 0; i < string.length; i++) {
//
//         if (string[i] === string[i + 1] && (string[i] && string[i + 1]) == 0) {
//             // console.log(number[i]);
//             // console.log(number[i + 1]);
//             break;
//         } else if (string[i] == 1) {
//             num++
//         }
//     }
//     return num;
// }
//
// const result = findNumber('210764910090475806100');
// console.log(result);
// _________________________________________________________________
//
// Вирівняти багаторівневий масив в однорівневий
//     [1,3, ['Hello, 'Wordd', [9,6,1]], ['oops'], 9] -> [1, 3, 'Hello, 'Wordd', 9, 6, 1, 'oops', 9]
// flat використовувати заборонено.

// const array = [1, 3, ['Hello', 'Word', [9, 6, 1]], ['oops'], 9,[123,'sdfksfd']];
// let newArray = [];
//
// function recursive(massive) {
//
//     for (let element of massive) {
//         if (typeof element === 'number' || typeof element === "string") {
//             newArray.push(element);
//         }
//
//         if (Array.isArray(element)) {
//             recursive(element);
//         }
//     }
// }
//
// recursive(array);
//
// console.log(newArray);
//     ___________________________________________________________________
//
// Знайти набільший елемент в масиві за допомогою reduce
//     [1,6,9,0,17,88,4,7] -> 88
// const array = [1, 6, 9, 0, 17, 88, 4, 7];
//
// const newArray = array.reduce((acc, value) => {
//
//     if (value > acc) {
//         acc = value;
//     }
//
//     return acc;
// }, 0);
//
// console.log(newArray);
// ____________________________________________________________________
//
// Знайти найблільше число поліндром яке утворюється завдяки добутку двох простих пятизначних чисел.
//
//     ____________________________________________________________________
//
// Реалізувати друкарську машинку.
//     У вас є текст "Hello World".
//     Ваша функція має друкувати цей текст по 1 симоволу в браузері.
//     КОЖНА нова буква має бути з РАНДОМНОЮ заутримкою від 0.1 до 1 секунди.
//     Цим самим ви маєте симулювати написання даного тексту юзером.
//     Приклад: "Hello"
// Затримки:
//     H (затримка 0.6)
// e (затримка 0.1)
// l (затримка 0.3)
// l (затримка 0.7)
// о (затримка 1)

